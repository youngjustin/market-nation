plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.github.sherter.google-java-format' version '0.9'
}

group = 'com.youngjustin.marketnation'
version = '0.0.1'

// Toolchain must be discoverable by Gradle. If running task from IntelliJ specify version of JDK IntelliJ is aware of
// If running from runner or command line, must specify Java Home path in org.gradle.java.home in gradle.properties
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

// without this, googleJavaFormat task won't do anything
googleJavaFormat {
	toolVersion = "1.1"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// TODO consider adding Flyway
//flyway {
//	defaultSchema = 'public'
//}

dependencies {
	// TODO version all dependencies
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-artemis'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework:spring-jms'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// TODO consider adding Flyway
	//runtimeOnly 'org.flywaydb:flyway-core'
	//runtimeOnly 'org.flywaydb:flyway-mysql'
}

tasks.named('test') {
	useJUnitPlatform()
}

// enforce code formatting before compile
build.dependsOn(tasks.googleJavaFormat)
verifyGoogleJavaFormat.mustRunAfter(tasks.googleJavaFormat)

googleJavaFormat {
	source = sourceSets*.allJava
	include '**/*.java'
}
